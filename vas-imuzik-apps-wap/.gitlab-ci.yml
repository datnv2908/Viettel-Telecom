image: node:14.16.0

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - node_modules
    - packages/web/node_modules
    - packages/mobile/node_modules
    - packages/server/node_modules
    - packages/specs/node_modules

stages:
  - test
  - build
  - deploy

before_script:
   - chmod +x ./packages/server/scripts/*.sh 
   - chmod +x ./packages/web/scripts/*.sh 
   - chmod +x ./packages/mobile/scripts/*.sh 

Mobile - Test:
  stage: test
  when: manual
  before_script:
    - yarn config set cache-folder .yarn
  script:
    - cd packages/mobile
    - yarn
    - yarn test:ci
    - yarn lint
  artifacts:
    name: coverage-mobile
    expire_in: 31d
    when: always
    paths:
      - packages/mobile/coverage
  coverage: '/All files\s+\|\s+([\d.]+)/'
  only:
    changes:
      - packages/mobile/**/*

Server - Test:
  stage: test
  when: manual
  before_script:
    - yarn config set cache-folder .yarn
  services:
    - mysql:5.6
  variables:
    MYSQL_DATABASE: imuzikp3
    MYSQL_ROOT_PASSWORD: pass
    MYSQL_LOGDB_HOST: mysql
    MYSQL_HOST: mysql
  script:
    - cd packages/server
    - yarn
    # - yarn coverage
    - yarn lint
  artifacts:
    name: coverage-server
    expire_in: 31d
    when: always
    paths:
      - packages/server/coverage
  coverage: '/All files\s+\|\s+([\d.]+)/'
  only:
    changes:
      - packages/server/**/*

web - build:
  stage: build
  tags:
      - api
  when: manual
  script: 
   - cd packages/web
   - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $REGISTRY
   - ./scripts/build-app.sh
web - deploy:
  stage: deploy
  tags:
    - api
  when: manual
  script:
    - cd packages/web
    - IMAGE=$(./scripts/image-current.sh)
    - APP_NAME=imuzik-web
    - echo "APP name $APP_NAME..."
    - echo "Deploying $IMAGE..."
    - kubectl --context $OTT_CLUSTER -n imuzik get deployments
    - kubectl --context $OTT_CLUSTER -n imuzik set image deployment.v1.apps/$APP_NAME $APP_NAME=$IMAGE
  only:
    - master
wap - build:
  stage: build
  tags:
      - api
  when: manual
  script: 
   - cd packages/mobile
   - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $REGISTRY
   - ./scripts/build-app.sh
wap - deploy:
  stage: deploy
  tags:
    - api
  when: manual
  script:
    - cd packages/mobile
    - IMAGE=$(./scripts/image-current.sh)
    - APP_NAME=imuzik-wap
    - echo "APP name $APP_NAME..."
    - echo "Deploying $IMAGE..."
    - kubectl --context $OTT_CLUSTER -n imuzik get deployments
    - kubectl --context $OTT_CLUSTER -n imuzik set image deployment.v1.apps/$APP_NAME $APP_NAME=$IMAGE
  only:
    - master
api - build:
  stage: build
  tags:
      - api
  when: manual
  script: 
   - cd packages/server
   - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $REGISTRY
   - ./scripts/build-app.sh
api - deploy:
  stage: deploy
  tags:
    - api
  when: manual
  script:
    - cd packages/server
    - IMAGE=$(./scripts/image-current.sh)
    - APP_NAME=imuzik-apps
    - echo "APP name $APP_NAME..."
    - echo "Deploying $IMAGE..."
    - kubectl --context $OTT_CLUSTER -n imuzik get deployments
    - kubectl --context $OTT_CLUSTER -n imuzik set image deployment.v1.apps/$APP_NAME $APP_NAME=$IMAGE
  only:
    - master